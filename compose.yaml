
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:8080"  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultDB=Host=db;Database=rentalmanagement;Username=postgres;Password=27QWnljFUKDw
      - ConnectionStrings__AuditDB=Host=db;Database=audit;Username=postgres;Password=27QWnljFUKDw
      - ConnectionString__BlobStorage=SharedAccessSignature=sv=2023-01-03&ss=btqf&srt=sco&st=2024-09-11T12%3A21%3A33Z&se=2024-09-12T12%3A21%3A33Z&sp=rwdxftlacup&sig=dY8xzmLhoo%2Fa6siJcS74mZYiC2wnYO8nbM7cM6mtcWA%3D;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;FileEndpoint=http://devstoreaccount1.file.core.windows.net;QueueEndpoint=http://127.0.0.1:10001/devstoreaccount1;TableEndpoint=http://127.0.0.1:10002/devstoreaccount1;
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest          
    depends_on:
      - db
      - rabbitmq
      - azurite

  db:
    image: postgres:13
    user: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=27QWnljFUKDw
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 15s
      retries: 3
    volumes:
      - db_data_final:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: azurite
    ports:
      - "10000:10000"  
      - "10001:10001"  
      - "10002:10002"  
    command: >
      sh -c "azurite --blobHost 0.0.0.0 --blobPort 10000 
                   --queueHost 0.0.0.0 --queuePort 10001 
                   --tableHost 0.0.0.0 --tablePort 10002"
    volumes:
      - azurite_data:/data
  
volumes:
  db_data_final:
  azurite_data:  
  
